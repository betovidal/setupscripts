#!/usr/bin/env bash

CONFS="$HOME/.config/nginx"
MNGINXCONF="$HOME/.config/nginx/nginx.conf"
NGINX="/etc/nginx"
NGINXLOGS="/etc/nginx/logs"
NGINXCONF="/etc/nginx/nginx.conf"
NGINXBK="/etc/nginx/nginx.conf.bckp"
AVAILABLE_HTTP="${NGINX}/conf.d/http"
# ENABLED="${NGINX}/sites-enabled/"
HTTPTEMPLATE="${CONFS}/templates/http.conf"

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

print_help() {
    fname="ngcli"
    printf "Usage: %s [COMMAND] [ARGS]\n" "${fname}"
    echo "Commands:"
    echo "  i | init"
    echo "    Copy/symlink nginx configuration files from."
    echo "    ${CONFS} and into ${NGINX}."
    echo "  l | ls | list"
    echo "    List available virtual servers information."
    echo "  c | create SITE_NAME PORT_NUMBER"
    echo "    Create new virtual server with the given parameters."
    echo ""
    echo "Needed with sudo: init, create."
}

get_filename() {
    filename=$(basename -- "$1")
    echo "${filename%.*}"
}

init() {
    # Create directories
    if [ ! -d "${NGINX}/" ]; then
        echo "No directory $NGINX. Is nginx installed?"
        return
    fi
    [ -d "$NGINXLOGS" ] || sudo mkdir -p "$NGINXLOGS"
    # Make a backup of the original configuration file and replace with mine.
    if [ ! -f "$NGINXBK" ]; then
        sudo cp "$NGINXCONF" "$NGINXBK"
        echo " ->[OK] Backed up $NGINXCONF to $NGINXBK"
    else
        echo " ->[WR] File $NGINXBK already exists. Skipping backup."
    fi
    if [ -f "${MNGINXCONF}" ]; then
        sudo rm "$NGINXCONF"
        sudo cp "$MNGINXCONF" "$NGINXCONF"
        echo " ->[OK] Copied $MNGINXCONF to $NGINXCONF."
    else
        echo " ->[ER] No file $NGINXCONF found."
        return
    fi
}

# TODO: Indicate available / enabled
list_servers() {
    if [ ! -d "$AVAILABLE_HTTP" ]; then
        echo " ->[ER] Directory $AVAILABLE_HTTP not found."
        return
    fi
    if [ -z "$(ls -A ${AVAILABLE_HTTP})" ]; then
        echo " ->[WR] Directory $AVAILABLE_HTTP is empty."
        return
    fi
    for conf in ${AVAILABLE_HTTP}/*; do
        contents=$(grep -m 3 'listen\|server_name\|root' "$conf")
        printf "%s\n%s\n\n" "$conf" "$contents"
    done
}

create_server() {
    [ -d "$AVAILABLE_HTTP" ] || sudo mkdir -p "$AVAILABLE_HTTP"
    if [ ! -f "$HTTPTEMPLATE" ]; then
        echo " ->[ER] No file $HTTPTEMPLATE found."
        return
    fi
    if [ -z "$1" ]; then
        echo " ->[ER] No site_name parameter given."
        return
    fi
    if [ -z "$2" ]; then
        echo " ->[ER] No port_number parameter given."
        return
    fi
    if [ -f "${AVAILABLE_HTTP}/$1" ]; then
        echo " ->[ER] Virtual server '$1' already exists."
        return
    fi
    # Configuration file for virtual server
    tmpfile="$(mktemp)"
    site_path="/usr/share/nginx/$1/"
    # root /usr/share/nginx/{site_name}/;
    sed -e 's,{site_path},'"$site_path"',g' -e "s/{port_number}/$2/g" \
        "$HOME/.config/nginx/templates/http.conf" > "$tmpfile"
    sudo mv "$tmpfile" "${AVAILABLE_HTTP}/${1}.conf"
    echo " ->[OK] Created configuration file ${AVAILABLE_HTTP}/${1}.conf."
    # Folder creation for website files.
    if [ ! -d  "$site_path" ]; then
        sudo mkdir "$site_path"
        sudo chown "$USER" "$site_path"
        echo " ->[OK] Created $site_path and made user \"$USER\" its owner."
    else
        echo " ->[WN] Path $site_path exists. Make sure it has the correct permissions."
    fi
}

arg="$1"
case "$arg" in
    "init" | "i")
        init
        ;;
    "list" | "ls" | "l")
        list_servers
        ;;
    "create" | "c")
        # site_name="$2"
        # port_number="$3"
        create_server "$2" "$3"
        ;;
    *)
        echo "Unrecognized option '$arg'"
        print_help
esac
